#indica la version de Docker Compose utilizada
version: '3.8'
#Bloque de servicios, indica los contenedores a utilizar.
services:

  db:
    image: mysql:5.7.26
    ports:
      - ${PUERTO_DB}:3306
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_USER=$DB_USER
      - MYSQL_DATABASE=$DB_NAME
    volumes:
      - ~/dato_mysql_compose:/var/lib/mysql
    networks:
      - red-app

  phpmyadmin: # Cliente phpmyadmin para
    image: phpmyadmin:5.1.1
    env_file:
      - .env
    ports:
      - ${PUERTO_PHPMYADMIN}:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - red-app
    depends_on: #indica que primero debe subir los servicios indicados.
      - db

  mocky-app:       #nombre del servicio
    image: dreamy236/mocky-app-backend #imagen utilizada si viene del registro.
    ports:          #puertos que estaran expuestos.
      - "8081:8080"
    env_file:
      - .env
    environment:    #variable de ambiente
      - NOMBRE_APP=$AMBIENTE
    networks:    #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}
    depends_on:   #indica que primero debe subir los servicios indicados.
      - db

  mocky-app-2: #nombre del servicio
    image: dreamy236/mocky-app-backend #imagen utilizada si viene del registro.
    ports: #puertos que estaran expuestos.
      - "8083:8080"
    env_file:
      - .env
    environment: #variable de ambiente
      - NOMBRE_APP=$AMBIENTE
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}
    depends_on: #indica que primero debe subir los servicios indicados.
      - db

  mocky-app-3: #nombre del servicio
    image: dreamy236/mocky-app-backend #imagen utilizada si viene del registro.
    ports: #puertos que estaran expuestos.
      - "8084:8080"
    env_file:
      - .env
    environment: #variable de ambiente
      - NOMBRE_APP=$AMBIENTE
    networks: #red para conectar los equipos.
      - red-app
    volumes:
      - my-volume-compose:${DB_VOLUME}
    depends_on: #indica que primero debe subir los servicios indicados.
      - db
    
  front-mocky-app:
    image: dreamy236/mocky-app:latest
    network_mode: host
networks:  #bloque para las redes
  red-app:   #indicando la red definida

volumes: #Bloque para definir los volumenes
  my-volume-compose:
  volume:
